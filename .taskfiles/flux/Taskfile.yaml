---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  KUBERNETES_DIR: "{{.ROOT_DIR}}/kubernetes"

tasks:
  apply:
    desc: Apply a Flux Kustomization resource for a cluster
    summary: |
      Args:
        path: Path to the Flux Kustomization resource (required)
        cluster: Cluster to run command against (default: main)
        name: Name of the Flux Kustomization to apply (default: last segment of <path> variable)
        ns: Namespace the Flux Kustomization exists in (default: flux-system)
    cmds:
      - flux --context {{.cluster}} build ks {{.ks_name}}
        --namespace {{.ns}}
        --kustomization-file {{.kustomization_file}}
        --path {{.kustomization_path}}
        {{ if contains "not found" .kustomization_found }}--dry-run{{ end }}
        |
        kubectl --context {{.cluster}} apply --server-side
        --field-manager=kustomize-controller -f -
    vars:
      kustomization_path: "{{.KUBERNETES_DIR}}/{{.cluster}}/apps/{{.path}}"
      kustomization_file: "{{.kustomization_path}}/ks.yaml"
      cluster: '{{.cluster | default "main"}}'
      path: '{{ or .path (fail "Argument (path) is required") }}'
      ks_name: '{{ .name | default (splitList "/" .path | last) }}'
      ns: '{{.ns | default "flux-system"}}'
      kustomization_found:
        sh: flux --context {{.cluster}} --namespace {{.ns}} get kustomization {{.ks_name}} 2>&1
    preconditions:
      - sh: "test -f {{.kustomization_file}}"
        msg: "Kustomization file {{.kustomization_file}} not found"
      - sh: kubectl config get-contexts {{.cluster}}
        msg: "Kubectl context {{.cluster}} not found"

  ks-suspend:
    desc: Suspend all Flux HelmReleases
    cmds:
      - |
        flux get ks --all-namespaces --no-header | awk '{print $1, $2}' \
          | xargs -n2 bash -c 'flux -n $0 suspend ks $1'

  ks-resume:
    desc: Resume all Flux HelmReleases
    cmds:
      - |
        flux get ks --all-namespaces --no-header | awk '{print $1, $2}' \
          | xargs -n2 bash -c 'flux -n $0 resume ks $1'

  hr-suspend:
    desc: Suspend all Flux HelmReleases
    cmds:
      - |
        flux get hr --all-namespaces --no-header | awk '{print $1, $2}' \
          | xargs -n2 bash -c 'flux -n $0 suspend hr $1'

  hr-resume:
    desc: Resume all Flux HelmReleases
    cmds:
      - |
        flux get hr --all-namespaces --no-header | awk '{print $1, $2}' \
          | xargs -n2 bash -c 'flux -n $0 resume hr $1'

  hr-reconcile:
    desc: Resume all Flux HelmReleases
    cmds:
      - |
        flux get hr --all-namespaces --no-header | awk '{print $1, $2}' \
          | xargs -n2 bash -c 'flux -n $0 reconcile hr $1 --force'
