---
- name: K3s installation
  hosts:
    - master
    - worker
  become: true
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Pausing for 5 seconds...
      ansible.builtin.pause:
        seconds: 5
  tasks:
    - name: Check if cluster is installed
      check_mode: false
      ansible.builtin.stat:
        path: "/etc/rancher/k3s/config.yaml"
      register: k3s_check_installed

    - name: Set manifest facts
      ansible.builtin.set_fact:
        k3s_server_manifests_templates: []
        k3s_server_manifests_urls: []
      when: k3s_check_installed.stat.exists

    - name: Create rancher dirs
      ansible.builtin.file:
        path: /etc/rancher
        owner: root
        group: root
        mode: 0755
        state: directory

    - name: Install kubelet config
      ansible.builtin.copy:
        src: files/kubelet.conf
        dest: /etc/rancher/k3s/kubelet.conf
        mode: 0644

    - name: Install Kubernetes
      ansible.builtin.include_role:
        name: xanmanning.k3s
        public: true
      vars:
        k3s_state: installed

    - name: Get absolute path to this Git repository # noqa: command-instead-of-module no-changed-when run_once[task]
      delegate_to: localhost
      become: false
      run_once: true
      check_mode: false
      ansible.builtin.command: |-
        git rev-parse --show-toplevel
      register: repo_abs_path

    - name: Copy kubeconfig to provision folder # noqa run_once[task]
      run_once: true
      ansible.builtin.fetch:
        src: "/etc/rancher/k3s/k3s.yaml"
        dest: "{{ repo_abs_path.stdout }}/ansible/kubeconfig"
        flat: true
      when:
        - k3s_control_node is defined
        - k3s_control_node

    - name: Update kubeconfig with the correct IPv4 address # noqa run_once[task]
      delegate_to: localhost
      become: false
      run_once: true
      ansible.builtin.replace:
        path: "{{ repo_abs_path.stdout }}/ansible/kubeconfig"
        regexp: "https://127.0.0.1:6443"
        replace: "https://{{ k3s_registration_address }}:6443"

    # Cleaning up the manifests from the /var/lib/rancher/k3s/server/manifests
    # directory is needed because k3s has an awesome "feature" to always deploy
    # these on restarting the k3s systemd service. Removing them does NOT
    # uninstall the manifests.

    # Removing them means we can manage the lifecycle of these components
    # outside of the /var/lib/rancher/k3s/server/manifests directory

    # FIXME(ansible): Check for deployments to be happy rather than waiting
    - name: Wait for k3s to finish installing the deployed manifests
      ansible.builtin.wait_for:
        timeout: 15
      when: k3s_server_manifests_templates | length > 0
        or k3s_server_manifests_dir | length > 0

    - name: Remove deployed manifest templates
      ansible.builtin.file:
        path: "{{ k3s_server_manifests_dir }}/{{ item | basename | regex_replace('\\.j2$', '') }}"
        state: absent
      loop: "{{ k3s_server_manifests_templates | default([]) }}"

    - name: Remove deployed manifest urls
      ansible.builtin.file:
        path: "{{ k3s_server_manifests_dir }}/{{ item.filename }}"
        state: absent
      loop: "{{ k3s_server_manifests_urls | default([]) }}"
