---
- name: Setup proxmox nodes
  hosts:
    - nodes
  become: true
  gather_facts: true
  any_errors_fatal: true

  pre_tasks:
    - name: Pausing for 5 seconds...
      ansible.builtin.pause:
        seconds: 5

  tasks:
    - name: Remove PVE Enterprise repo
      ansible.builtin.apt_repository:
        repo: deb https://enterprise.proxmox.com/debian/pve {{ ansible_distribution_release }} pve-enterprise
        state: absent
        filename: pve-enterprise

    - name: Add PVE no-subscription repo
      ansible.builtin.apt_repository:
        repo: deb http://download.proxmox.com/debian/pve bullseye pve-no-subscription
        state: present
        filename: pve-no-subscription

    - name: Upgrade all system packages
      ansible.builtin.apt:
        upgrade: full
        update_cache: true
        cache_valid_time: 3600
        autoclean: true
        autoremove: true
      register: apt_upgrade
      retries: 5
      until: apt_upgrade is success

    - name: Mount EFI dir
      ansible.posix.mount:
        src: /dev/nvme0n1p2
        path: /boot/efi
        fstype: vfat
        state: mounted

    - name: Install Netdata
      ansible.builtin.include_role:
        name: netdata
      vars:
        claim_token: '{{ netdata_claim_token }}'
        claim_rooms: '{{ netdata_claim_room }}'

    - name: Install common packages
      ansible.builtin.apt:
        name:
          - vim
          - htop
          - linux-cpupower
          - lm-sensors
          - fwupdate
          - nginx
        install_recommends: true
        update_cache: true
        cache_valid_time: 3600
        autoclean: true
        autoremove: true

    - name: Load lm_sensors modules
      community.general.modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - coretemp
        - drivetemp

    - name: Enable lm_sensors modules on boot
      ansible.builtin.copy:
        mode: 0644
        content: "{{ item }}"
        dest: "/etc/modules-load.d/{{ item }}.conf"
      loop:
        - coretemp
        - drivetemp

    - name: Set CPU mode to powersave (tmpfile)
      ansible.builtin.copy:
        mode: 0644
        content: "w /sys/devices/system/cpu/cpufreq/policy*/scaling_governor - - - - powersave"
        dest: /etc/tmpfiles.d/cpu_governor.conf
      notify: Configure CPU mode to powersave

    - name: Setup nginx proxy for proxmox
      block:
        - name: Create nginx override dir
          ansible.builtin.file:
            path: /etc/systemd/system/nginx.service.d
            state: directory
            mode: 0755

        - name: Add nginx override
          ansible.builtin.copy:
            src: files/nginx-override.conf
            dest: /etc/systemd/system/nginx.service.d/override.conf
            mode: 0644
          notify: Reload systemd

        - name: Disable default nginx config
          ansible.builtin.file:
            path: /etc/nginx/sites-enabled/default
            state: absent

        - name: Configure nginx for proxmox
          ansible.builtin.template:
            src: proxmox.conf.j2
            dest: /etc/nginx/conf.d/proxmox.conf
            mode: 0644
          notify: Restart nginx

    - name: "Gather installed packages"
      ansible.builtin.package_facts:
        manager: auto

    - name: "Install pve fake subscription"
      when: "'pve-fake-subscription' not in ansible_facts.packages"
      block:
        - name: Get newest pve-fake-subscription release
          ansible.builtin.uri:
            url: https://api.github.com/repos/Jamesits/pve-fake-subscription/releases/latest
            return_content: true
          register: json_reponse

        - name: Create tmpdir
          ansible.builtin.tempfile:
            state: directory
          register: tmpdir

        - name: Download pve-fake-subscription
          ansible.builtin.get_url:
            url: '{{ json_reponse.json.assets[0].browser_download_url }}'
            dest: '{{ tmpdir.path }}'
            mode: 0644
          register: download

        - name: Install pve-fake-subscription
          ansible.builtin.apt:
            deb: '{{ download.dest }}'

    - name: Disable rsyslog
      ansible.builtin.systemd:
        name: '{{ item }}'
        enabled: false
        state: stopped
      loop:
        - rsyslog.service

    - name: Configure journald parameters
      ansible.builtin.include_role:
        name: igor_nikiforov.journald
      vars:
        journald_config:
          Storage: volatile

  handlers:
    - name: Configure CPU mode to powersave
      ansible.builtin.command:
        cmd: cpupower frequency-set -g powersave

    - name: Restart nginx
      ansible.builtin.systemd:
        name: nginx
        state: restarted

    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: true
