---
# yaml-language-server: $schema=https://raw.githubusercontent.com/JJGadgets/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: security
spec:
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://charts.goauthentik.io/
      chart: authentik
      version: 2022.11.3
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    replicas: 1
    worker:
      replicas: 1
    image:
      repository: ghcr.io/goauthentik/server
      tag: 2022.11.3
    authentik:
      email:
        host: smtp.fastmail.com
        port: 465
        use_ssl: true
        username: "${NULLMAILER_USERNAME}"
        password: "${NULLMAILER_PASSWORD}"
        from: "Authentik <auth@${SECRET_DOMAIN}>"
      log_level: debug
      error_reporting:
        enabled: false
    ingress:
      enabled: true
      ingressClassName: public
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
        external-dns.alpha.kubernetes.io/target: "${SECRET_DOMAIN}"
        external-dns/is-public: "true"
      hosts:
        - host: "auth.${SECRET_DOMAIN}"
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: "auth.${SECRET_DOMAIN}"
          hosts:
            - "auth.${SECRET_DOMAIN}"
    postgresql:
      enabled: true
      primary:
        podAnnotations:
          backup.velero.io/backup-volumes: data
      persistence:
        enabled: true
        existingClaim: authentik-postgresql
      postgresqlDatabase: authentik
    redis:
      enabled: true
      auth:
        enabled: true
      master:
        podAnnotations:
          backup.velero.io/backup-volumes: redis-data
        persistence:
          enabled: true
          existingClaim: authentik-redis
  valuesFrom:
    - kind: Secret
      name: authentik-secrets
      valuesKey: secretKey
      targetPath: authentik.secret_key
    - kind: Secret
      name: authentik-secrets
      valuesKey: postgresUser
      targetPath: authentik.postgresql.user
    - kind: Secret
      name: authentik-secrets
      valuesKey: postgresPassword
      targetPath: authentik.postgresql.password
    - kind: Secret
      name: authentik-secrets
      valuesKey: postgresUser
      targetPath: postgresql.postgresqlUsername
    - kind: Secret
      name: authentik-secrets
      valuesKey: postgresPassword
      targetPath: postgresql.postgresqlPassword
    - kind: Secret
      name: authentik-secrets
      valuesKey: redisPassword
      targetPath: authentik.redis.password
    - kind: Secret
      name: authentik-secrets
      valuesKey: redisPassword
      targetPath: redis.auth.password
