---
# yaml-language-server: $schema=https://raw.githubusercontent.com/JJGadgets/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sonarr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts/
      chart: app-template
      version: 1.2.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    image:
      repository: ghcr.io/onedr0p/sonarr-develop
      tag: 4.0.0.323
    podSecurityContext:
      runAsUser: 1003
      runAsGroup: 2000
      fsGroup: 2000
    controller:
      type: statefulset
    env:
      TZ: Europe/Warsaw
    resources:
      requests:
        cpu: 100m
        memory: 250Mi
      limits:
        memory: 500Mi
    podAnnotations:
      backup.velero.io/backup-volumes: config
    probes:
      liveness:
        enabled: true
        custom: true
        spec:
          exec:
            command:
              - /usr/bin/env
              - bash
              - -c
              - curl --fail localhost:8989/api/v3/system/status?apiKey=`IFS=\> && while
                read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
          failureThreshold: 5
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        storageClass: truenas-ssd
        accessMode: ReadWriteOnce
        size: 1Gi
    persistence:
      media:
        enabled: true
        existingClaim: quadrant-media
        mountPath: /media
        retain: true
    service:
      main:
        ports:
          http:
            port: 8989
    ingress:
      main:
        enabled: true
        ingressClassName: public
        annotations:
          external-dns.alpha.kubernetes.io/target: "${SECRET_DOMAIN}"
          external-dns/is-public: "true"
          cert-manager.io/cluster-issuer: letsencrypt-production
          hajimari.io/enable: "true"
          hajimari.io/appName: Sonarr
          hajimari.io/icon: mdi:television-box
          hajimari.io/group: media
          nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-signin: https://tv.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Host $http_host;
          nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-proxy-outpost.security.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
        hosts:
          - host: "tv.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: "tv.${SECRET_DOMAIN}"
            hosts:
              - "tv.${SECRET_DOMAIN}"
