---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: grafana
      version: 6.52.8
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    replicas: 1
    rbac:
      pspEnabled: false
    grafana.ini:
      analytics:
        check_for_updates: false
      auth:
        oauth_auto_login: false
      auth.basic:
        enabled: false
        disable_login_form: false
      auth.anonymous:
        enabled: true
        org_id: 1
        org_role: Viewer
      auth.generic_oauth:
        enabled: true
        name: ${SECRET_DOMAIN}
        scopes: openid email profile
        auth_url: https://auth.${SECRET_DOMAIN}/application/o/authorize/
        token_url: https://auth.${SECRET_DOMAIN}/application/o/token/
        api_url: https://auth.${SECRET_DOMAIN}/application/o/userinfo/
        use_pkce: true
      auth.generic_oauth.group_mapping:
        role_attribute_path: |
          contains(groups[*], 'infrastructure') && 'Admin' || 'Viewer'
        org_id: 1
      grafana_net:
        url: https://grafana.net
      log:
        mode: console
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      server:
        root_url: https://grafana.internal.${SECRET_DOMAIN}
    envFromSecrets:
      - name: grafana-oidc
    ingress:
      enabled: true
      annotations:
        hajimari.io/enable: "true"
        hajimari.io/appName: Grafana
        hajimari.io/icon: simple-icons:grafana
        hajimari.io/group: infrastructure
      ingressClassName: private
      hosts:
        - &host grafana.internal.${SECRET_DOMAIN}
      tls:
        - hosts:
            - *host
          secretName: *host
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://thanos-query.monitoring.svc.cluster.local:9090
            isDefault: true
          - name: Alertmanager
            type: alertmanager
            access: proxy
            url: http://kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
          # - name: Loki
          #   type: loki
          #   access: proxy
          #   url: http://loki-gateway.monitoring.svc.cluster.local:80
        deleteDatasources:
          - name: Loki
            orgId: 1
          - name: Alertmanager
            orgId: 1
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    dashboards:
      default:
        node-exporter-full:
          # Ref: https://grafana.com/grafana/dashboards/1860
          gnetId: 1860
          revision: 29
          datasource: Prometheus
        ingress:
          # Ref: https://grafana.com/grafana/dashboards/9614
          gnetId: 9614
          revision: 1
          datasource: Prometheus
        unifi-usw:
          # Ref: https://unpoller.com/docs/install/grafana
          gnetId: 11312
          revision: 9
          datasource: Prometheus
        unifi-usg:
          gnetId: 11313
          revision: 9
          datasource: Prometheus
        unifi-uap:
          gnetId: 11314
          revision: 10
          datasource: Prometheus
        unifi-clients:
          gnetId: 11315
          revision: 9
          datasource: Prometheus
        redis-ha:
          gnetId: 11835
          revision: 1
          datasource: Prometheus
        # haproxy:
        #   gnetId: 12693
        #   revision: 5
        #   datasource: Prometheus
        # felix:
        #   gnetId: 12175
        #   revision: 5
        #   datasource: Prometheus
        # calico:
        #   gnetId: 3244
        #   revision: 1
        #   datasource: Prometheus

    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        # folderAnnotation: grafana_folder
        # provider:
        #   foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
    imageRenderer:
      enabled: true
    persistence:
      enabled: false
      inMemory:
        enabled: true
    serviceMonitor:
      enabled: false
