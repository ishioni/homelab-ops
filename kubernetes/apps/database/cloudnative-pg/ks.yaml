---
# yaml-language-server: $schema=https://crd.movishell.pl/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app cloudnative-pg
  namespace: &namespace database
spec:
  commonMetadata:
    labels:
      app.kubernetes.io/name: *app
  interval: 30m
  path: ./kubernetes/apps/database/cloudnative-pg/operator
  prune: true
  sourceRef:
    kind: GitRepository
    name: homelab-ops
    namespace: flux-system
  targetNamespace: *namespace
  wait: true
---
# yaml-language-server: $schema=https://crd.movishell.pl/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app cloudnative-pg-barman-cloud
  namespace: &namespace database
spec:
  commonMetadata:
    labels:
      app.kubernetes.io/name: *app
  dependsOn:
    - name: cert-manager
      namespace: network
  interval: 30m
  path: ./kubernetes/apps/database/cloudnative-pg/barman-cloud
  postBuild:
    substitute:
      # renovate: datasource=docker depName=ghcr.io/cloudnative-pg/plugin-barman-cloud-sidecar
      SIDECAR_IMAGE_VERSION: v0.6.0
  prune: true
  retryInterval: 5m
  sourceRef:
    kind: GitRepository
    name: homelab-ops
    namespace: flux-system
  targetNamespace: *namespace
  timeout: 5m
  wait: true
---
# yaml-language-server: $schema=https://crd.movishell.pl/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app postgres-cluster
  namespace: &namespace database
spec:
  commonMetadata:
    labels:
      app.kubernetes.io/name: *app
  dependsOn:
    - name: cloudnative-pg
      namespace: database
    - name: cloudnative-pg-barman-cloud
      namespace: database
    - name: openebs
      namespace: storage
    - name: external-secrets
      namespace: security
  # healthCheckExprs:
  #   - apiVersion: postgresql.cnpg.io/v1
  #     kind: Cluster
  #     current: status.conditions.filter(e, e.type == 'Ready').all(e, e.status == 'True')
  #     failed: status.conditions.filter(e, e.type == 'Ready').all(e, e.status == 'False')
  interval: 30m
  path: ./kubernetes/apps/database/cloudnative-pg/cluster
  prune: true
  sourceRef:
    kind: GitRepository
    name: homelab-ops
    namespace: flux-system
  targetNamespace: *namespace
  wait: true
---
# yaml-language-server: $schema=https://crd.movishell.pl/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app cloudnative-pg-dashboard
  namespace: &namespace database
spec:
  commonMetadata:
    labels:
      app.kubernetes.io/name: *app
  interval: 30m
  path: ./kubernetes/apps/database/cloudnative-pg/dashboard
  prune: true
  sourceRef:
    kind: GitRepository
    name: homelab-ops
    namespace: flux-system
  targetNamespace: *namespace
  wait: true
