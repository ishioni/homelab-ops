---
# yaml-language-server: $schema=https://raw.githubusercontent.com/ishioni/CRDs-catalog/main/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: bazarr
  namespace: downloads
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        type: statefulset
        statefulset:
          volumeClaimTemplates:
            - name: config
              mountPath: /config
              storageClass: truenas-hdd-nfs
              accessMode: ReadWriteOnce
              size: 5Gi
        annotations:
          secret.reloader.stakater.com/reload: &secret bazarr-secret
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 15.5
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: *secret
        pod:
          securityContext:
            runAsUser: ${CONFIG_APP_UID}
            runAsGroup: &gid ${CONFIG_MEDIA_UID}
            fsGroup: *gid
            fsGroupChangePolicy: OnRootMismatch
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/bazarr
              tag: 1.3.1
            env:
              TZ: Europe/Warsaw
            envFrom:
              - secretRef:
                  name: *secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api
                    port: &port 6767
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
              resources:
                requests:
                  cpu: 50m
                  memory: 200Mi
                limits:
                  memory: 500Mi
    service:
      main:
        ports:
          http:
            port: *port
    persistence:
      media:
        enabled: true
        existingClaim: downloads-datastore
        globalMounts:
          - path: /media
            retain: true
    ingress:
      main:
        enabled: true
        className: public
        annotations:
          authentik.home.arpa/enabled: "true"
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://bazarr.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$escaped_request_uri
          hajimari.io/enable: "true"
          hajimari.io/appName: Bazarr
          hajimari.io/icon: subtitles
          hajimari.io/group: downloads
        hosts:
          - host: &host "bazarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - secretName: *host
            hosts:
              - *host
