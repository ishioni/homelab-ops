---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: tandoor
  namespace: fileserver
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      strategy: RollingUpdate
      annotations:
        secret.reloader.stakater.com/reload: &secret tandoor-secret
        configMap.reloader.stakater.com/reload: &configmap tandoor-configmap
    initContainers:
      init-db:
        image: ghcr.io/onedr0p/postgres-init:14.9
        envFrom:
          - secretRef:
              name: *secret
    image:
      repository: ghcr.io/tandoorrecipes/recipes
      tag: "1.5.5"
    envFrom:
      - secretRef:
          name: *secret
      - configMapRef:
          name: *configmap
    podSecurityContext:
      runAsUser: 0
    securityContext:
      runAsUser: 65534
    service:
      main:
        ports:
          http:
            primary: true
            port: 80
          gunicorn:
            port: 8080
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /accounts/login/
            port: gunicorn
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /accounts/login/
            port: gunicorn
          failureThreshold: 30
          periodSeconds: 10
    ingress:
      main:
        enabled: true
        ingressClassName: public
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/appName: Recipes
          hajimari.io/group: groupware
          hajimari.io/icon: mdi:chef-hat
        hosts:
          - host: &host "recipes.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
              - path: /accounts/signup
                service:
                  name: blackhole
                pathType: Prefix
        tls:
          - secretName: *host
            hosts:
              - *host
    persistence:
      files:
        enabled: true
        existingClaim: tandoor-files
        subPath:
          - path: mediafiles
            mountPath: /opt/recipes/mediafiles
          - path: staticfiles
            mountPath: /opt/recipes/staticfiles
      nginx-config:
        enabled: "true"
        mountPath: /etc/nginx/nginx.conf
        subPath: nginx-config
        type: "custom"
        volumeSpec:
          configMap:
            name: tandoor-nginx
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        memory: 512Mi
    additionalContainers:
      nginx:
        name: nginx
        image: public.ecr.aws/nginx/nginx:1.25.1
        imagePullPolicy: IfNotPresent
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
        volumeMounts:
          - name: nginx-config
            readOnly: true
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx-config
          - name: files
            mountPath: /media
            subPath: mediafiles
          - name: files
            mountPath: /static
            subPath: staticfiles
