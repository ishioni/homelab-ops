---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: transmission
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    image:
      repository: ghcr.io/onedr0p/transmission
      tag: "4.0.3"
    podSecurityContext:
      runAsUser: 1003
      runAsGroup: 2000
      fsGroup: 2000
    controller:
      type: statefulset
    env:
      TZ: Europe/Warsaw
      TRANSMISSION__BLOCKLIST_URL: "https://mirror.codebucket.de/transmission/blocklist.p2p.gz"
      TRANSMISSION__DOWNLOAD_DIR: "/downloads"
      TRANSMISSION__INCOMPLETE_DIR_ENABLED: false
      TRANSMISSION__RPC_PORT: &port 9091
      TRANSMISSION__PEER_PORT: &peerport 51413
      TRANSMISSION__RATIO_LIMIT: 1
      TRANSMISSION__RATIO_LIMIT_ENABLED: true
      TRANSMISSION__SPEED_LIMIT_UP_ENABLED: true
      TRANSMISSION__SPEED_LIMIT_UP: 8000
      TRANSMISSION__UMASK: 7
      #For changing webui
      #TRANSMISSION_WEB_HOME: "/app/web"
    envFrom:
      - secretRef:
          name: transmission-rpc
    service:
      main:
        ports:
          http:
            port: *port
      utptcp:
        enabled: true
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: "${CONFIG_TRANSMISSION_IP}"
        externalTrafficPolicy: Local
        ports:
          utptcp:
            enabled: true
            port: *peerport
            protocol: TCP
            targetPort: *peerport
      utpudp:
        enabled: true
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: "${CONFIG_TRANSMISSION_IP}"
        externalTrafficPolicy: Local
        ports:
          utpudp:
            enabled: true
            port: *peerport
            protocol: UDP
            targetPort: *peerport
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /transmission/web/
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    persistence:
      downloads:
        enabled: true
        existingClaim: media-datastore
        mountPath: "/downloads"
        subPath: Downloads
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        storageClass: truenas-ssd-nvmeof
        accessMode: ReadWriteOnce
        size: 100Mi
    ingress:
      main:
        enabled: true
        ingressClassName: public
        annotations:
          external-dns.home.arpa/enabled: "true"
          authentik.home.arpa/enabled: "true"
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://torrent.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$escaped_request_uri
          hajimari.io/enable: "true"
          hajimari.io/appName: Transmission
          hajimari.io/icon: mdi:cloud-download
          hajimari.io/group: media
        hosts:
          - host: &host "torrent.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: *host
            hosts:
              - *host
    resources:
      requests:
        cpu: 50m
        memory: 64Mi
      limits:
        memory: 300Mi
