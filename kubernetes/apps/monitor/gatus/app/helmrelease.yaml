---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: gatus
  namespace: monitor
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          secret.reloader.stakater.com/reload: &secret gatus-secret
          configmap.reloader.stakater.com/reload: &configmap gatus-configmap
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 14.9
              imagePullPolicy: IfNotPresent
            envFrom: &envfrom
              - secretRef:
                  name: *secret
          02-config-sync:
            image:
              repository: ghcr.io/kiwigrid/k8s-sidecar
              tag: 1.25.2
              imagePullPolicy: IfNotPresent
            env:
              - {name: FOLDER, value: /config}
              - {name: LABEL, value: gatus.io/enabled}
              - {name: NAMESPACE, value: ALL}
              - {name: RESOURCE, value: both}
              - {name: UNIQUE_FILENAMES, value: "true"}
              - {name: METHOD, value: LIST}
        containers:
          main:
            image:
              repository: ghcr.io/twin/gatus
              tag: v5.6.0
            env:
              TZ: ${CONFIG_TIMEZONE}
              GATUS_CONFIG_PATH: /config
              CUSTOM_WEB_PORT: &port 80
            envFrom: *envfrom
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
              limits:
                memory: 500Mi
          config-sync:
            image:
              repository: ghcr.io/kiwigrid/k8s-sidecar
              tag: 1.25.2
              imagePullPolicy: IfNotPresent
            env:
              - {name: FOLDER, value: /config}
              - {name: LABEL, value: gatus.io/enabled}
              - {name: NAMESPACE, value: ALL}
              - {name: RESOURCE, value: both}
              - {name: UNIQUE_FILENAMES, value: "true"}
              - {name: METHOD, value: WATCH}
    service:
      main:
        ports:
          http:
            port: *port
    serviceMonitor:
      main:
        enabled: true
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      main:
        enabled: true
        className: public
        hosts:
          - host: &host status.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - secretName: *host
            hosts:
              - *host
    serviceAccount:
      create: true
      name: gatus
    persistence:
      config-dir:
        type: emptyDir
        globalMounts:
          - path: /config
      config-file:
        type: configMap
        name: *configmap
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
            readOnly: true
