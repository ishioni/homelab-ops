---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/app-template-4.0.1/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: gatus
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  interval: 30m
  maxHistory: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      gatus:
        annotations:
          secret.reloader.stakater.com/reload: &secret gatus-secret
          configmap.reloader.stakater.com/reload: &configmap gatus-configmap
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.6
            envFrom: &envfrom
              - secretRef:
                  name: *secret
          init-config:
            dependsOn: init-db
            image:
              repository: ghcr.io/kiwigrid/k8s-sidecar
              tag: 1.30.9
            env:
              FOLDER: /config
              LABEL: gatus.io/enabled
              NAMESPACE: ALL
              RESOURCE: both
              UNIQUE_FILENAMES: true
              METHOD: WATCH
            restartPolicy: Always
        containers:
          app:
            image:
              repository: ghcr.io/twin/gatus
              tag: v5.23.1
            env:
              TZ: ${CONFIG_TIMEZONE}
              PUBLIC_DOMAIN: ${PUBLIC_DOMAIN}
              PRIVATE_DOMAIN: ${PRIVATE_DOMAIN}
              GATUS_CONFIG_PATH: /config
              GATUS_DELAY_START_SECONDS: 5
              CUSTOM_WEB_PORT: &port 8080
            envFrom: *envfrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
              limits:
                memory: 250Mi
        serviceAccount:
          identifier: gatus
    defaultPodOptions:
      dnsConfig:
        options:
          - {name: ndots, value: "1"}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: {type: RuntimeDefault}
    service:
      app:
        controller: gatus
        ports:
          http:
            port: *port
    serviceMonitor:
      app:
        serviceName: gatus
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      app:
        className: public
        hosts:
          - host: ${HOSTNAME}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    serviceAccount:
      gatus: {}
    persistence:
      config:
        type: emptyDir
      config-file:
        type: configMap
        name: *configmap
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
            readOnly: true
    rbac:
      bindings:
        gatus:
          type: ClusterRoleBinding
          roleRef:
            kind: ClusterRole
            name: gatus
          subjects:
            - identifier: gatus
      roles:
        gatus:
          type: ClusterRole
          rules:
            - apiGroups: [""]
              resources: ["configmaps", "secrets"]
              verbs: ["get", "watch", "list"]
