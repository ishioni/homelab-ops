---
# yaml-language-server: $schema=https://crd.movishell.pl/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ingress-private
spec:
  interval: 30m
  chart:
    spec:
      chart: ingress-nginx
      version: 4.12.0
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
        namespace: flux-system
  values:
    controller:
      replicaCount: 2
      extraEnvs:
        - name: TZ
          value: "${CONFIG_TIMEZONE}"
      extraArgs:
        default-ssl-certificate: "network/default-both-certificate"
      terminationGracePeriodSeconds: 120
      kind: Deployment
      electionID: "ingress-private-leader"
      allowSnippetAnnotations: true
      enableAnnotationValidations: true
      ingressClassByName: true
      ingressClassResource:
        default: false
        enabled: true
        name: private
        controllerValue: "k8s.io/ingress-private"
      service:
        type: LoadBalancer
      admissionWebhooks:
        objectSelector:
          matchExpressions:
            - key: ingress-class
              operator: In
              values: ["private"]
      config:
        annotations-risk-level: Critical
        client-body-buffer-size: "100M"
        client-body-timeout: 120
        client-header-timeout: 120
        enable-brotli: "true"
        enable-real-ip: "true"
        hsts-max-age: 31449600
        keep-alive-requests: 10000
        keep-alive: 120
        # custom-http-errors: 400,401,403,404,500,502,503,504
        ssl-protocols: "TLSv1.3 TLSv1.2"
        proxy-body-size: 0
        proxy-buffer-size: 16k
        proxy-read-timeout: 120
        proxy-send-timeout: 120
        # log-format-escape-json: "true"
        # log-format-upstream: >
        #   {"time": "$time_iso8601", "remote_addr": "$proxy_protocol_addr",
        #   "x_forwarded_for": "$proxy_add_x_forwarded_for", "request_id": "$req_id",
        #   "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time,
        #   "status": $status, "vhost": "$host", "request_proto": "$server_protocol",
        #   "path": "$uri", "request_query": "$args", "request_length": $request_length,
        #   "duration": $request_time,"method": "$request_method", "http_referrer": "$http_referer",
        #   "http_user_agent": "$http_user_agent"}
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          namespace: network
          namespaceSelector:
            any: true
      resources:
        requests:
          cpu: 15m
          memory: 250Mi
        limits:
          memory: 1000Mi
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
              app.kubernetes.io/component: controller
              app.kubernetes.io/instance: ingress-private
