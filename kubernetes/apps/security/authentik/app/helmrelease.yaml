---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: security
spec:
  interval: 15m
  chart:
    spec:
      chart: authentik
      version: 2023.8.2
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      annotations:
        secret.reloader.stakater.com/reload: &secret authentik-secret
    initContainers:
      init-db:
        image: ghcr.io/onedr0p/postgres-init:14.9
        envFrom:
          - secretRef:
              name: *secret
    replicas: 1
    worker:
      replicas: 1
    authentik:
      email:
        use_ssl: true
        port: "465"
        from: "Authentik <auth@${SECRET_DOMAIN}>"
      log_level: debug
      error_reporting:
        enabled: false
    ingress:
      enabled: true
      ingressClassName: public
      annotations:
        hajimari.io/enable: "true"
        hajimari.io/icon: simple-icons:webauthn
        hajimari.io/group: infrastructure
        hajimari.io/appName: Authentik
      hosts:
        - host: &host "auth.${SECRET_DOMAIN}"
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: *host
          hosts:
            - *host
    prometheus:
      serviceMonitor:
        create: true
      rules:
        create: true
    resources:
      server:
        requests:
          cpu: 50m
          memory: 500Mi
        limits:
          memory: 800Mi
      worker:
        requests:
          cpu: 50m
          memory: 500Mi
        limits:
          memory: 1200Mi
    # volumes:
    #   - name: authentik-media
    #     persistentVolumeClaim:
    #       claimName: authentik-media
    # volumeMounts:
    #   - name: authentik-media
    #     mountPath: /media
    #     subPath: media
    #   - name: authentik-media
    #     mountPath: /templates
    #     subPath: custom-templates
    redis:
      enabled: true
      auth:
        enabled: true
      master:
        persistence:
          enabled: true
          size: 1Gi
        resources:
          requests:
            cpu: 15m
            memory: 50Mi
          limits:
            memory: 100Mi
      commonConfiguration: |-
        # Enable AOF https://redis.io/topics/persistence#append-only-file
        appendonly yes
        # Disable RDB persistence, AOF persistence already enabled.
        save ""
        maxmemory 94371840
        maxmemory-policy allkeys-lru
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
        resources:
          requests:
            cpu: 10m
            memory: 10Mi
          limits:
            memory: 20Mi
  valuesFrom:
    - kind: Secret
      name: *secret
      valuesKey: AUTHENTIK_SECRET_KEY
      targetPath: authentik.secret_key
    - kind: Secret
      name: *secret
      valuesKey: SMTP_HOST
      targetPath: authentik.email.host
    - kind: Secret
      name: *secret
      valuesKey: SMTP_USERNAME
      targetPath: authentik.email.username
    - kind: Secret
      name: *secret
      valuesKey: SMTP_PASS
      targetPath: authentik.email.password
    - kind: Secret
      name: *secret
      valuesKey: POSTGRES_HOST
      targetPath: authentik.postgresql.host
    - kind: Secret
      name: *secret
      valuesKey: POSTGRES_USER
      targetPath: authentik.postgresql.user
    - kind: Secret
      name: *secret
      valuesKey: POSTGRES_PASS
      targetPath: authentik.postgresql.password
    - kind: Secret
      name: *secret
      valuesKey: POSTGRES_DB
      targetPath: authentik.postgresql.name
    - kind: Secret
      name: *secret
      valuesKey: REDIS_PASS
      targetPath: authentik.redis.password
    - kind: Secret
      name: *secret
      valuesKey: REDIS_PASS
      targetPath: redis.auth.password
