---
# yaml-language-server: $schema=https://crd.movishell.pl/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app external-secrets
  namespace: &namespace security
spec:
  commonMetadata:
    labels:
      app.kubernetes.io/name: *app
  interval: 30m
  path: ./kubernetes/apps/security/external-secrets/operator
  prune: true
  sourceRef:
    kind: GitRepository
    name: homelab-ops
    namespace: flux-system
  targetNamespace: *namespace
  wait: true
---
# yaml-language-server: $schema=https://crd.movishell.pl/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app onepassword-connect
  namespace: &namespace security
spec:
  commonMetadata:
    labels:
      app.kubernetes.io/name: *app
  interval: 30m
  path: ./kubernetes/apps/security/external-secrets/onepassword/
  prune: true
  sourceRef:
    kind: GitRepository
    name: homelab-ops
    namespace: flux-system
  targetNamespace: *namespace
  wait: true
---
# yaml-language-server: $schema=https://crd.movishell.pl/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app onepassword-store
  namespace: &namespace security
spec:
  commonMetadata:
    labels:
      app.kubernetes.io/name: *app
  dependsOn:
    - name: external-secrets
      namespace: *namespace
    - name: onepassword-connect
      namespace: *namespace
  healthCheckExprs:
    - apiVersion: external-secrets.io/v1beta1
      kind: ClusterSecretStore
      failed: status.conditions.filter(e, e.type == 'Ready').all(e, e.status == 'False')
      current: status.conditions.filter(e, e.type == 'Ready').all(e, e.status == 'True')
  interval: 30m
  path: ./kubernetes/apps/security/external-secrets/stores
  prune: true
  sourceRef:
    kind: GitRepository
    name: homelab-ops
    namespace: flux-system
  targetNamespace: *namespace
  wait: true
