---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/app-template-4.0.1/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vaultwarden
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  interval: 30m
  maxHistory: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      vaultwarden:
        annotations:
          secret.reloader.stakater.com/reload: &secret vaultwarden-secret
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: *secret
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
        containers:
          app:
            image:
              repository: ghcr.io/timshel/oidcwarden
              tag: v2025.5.1-3
            env:
              DATA_FOLDER: "data"
              ICON_CACHE_FOLDER: "data/icon_cache"
              ATTACHMENTS_FOLDER: "data/attachments"
              DOMAIN: "https://${HOSTNAME}"
              TZ: ${CONFIG_TIMEZONE}
              SIGNUPS_ALLOWED: "false"
              SMTP_FROM: homelab@${PUBLIC_DOMAIN}
              SMTP_SECURITY: force_tls
              INVITATION_ORG_NAME: ${PUBLIC_DOMAIN}
              TRASH_AUTO_DELETE_DAYS: "30"
              SSO_ENABLED: "true"
              SSO_ONLY: "true"
              SSO_AUTHORITY: https://auth.${PUBLIC_DOMAIN}/application/o/vaultwarden/
              SSO_SCOPES: email profile offline_access
            envFrom:
              - secretRef:
                  name: *secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /alive
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 2Gi
    service:
      app:
        controller: vaultwarden
        ports:
          http:
            port: *port
    ingress:
      app:
        className: public
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Infrastructure
          gethomepage.dev/name: Vaultwarden
          gethomepage.dev/icon: vaultwarden.svg
        hosts:
          - host: &host ${HOSTNAME}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      data:
        existingClaim: ${PVC_CLAIM}
