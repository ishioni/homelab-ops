---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/app-template-4.0.1/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: go2rtc
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  interval: 30m
  maxHistory: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      go2rtc:
        strategy: RollingUpdate
        annotations:
          secret.reloader.stakater.com/reload: &secret go2rtc-secret
        containers:
          app:
            image:
              repository: ghcr.io/alexxit/go2rtc
              tag: 1.9.9@sha256:7d31dcb73633310e80497c431f4534c81ed55ec0708db3262bc56918e654bba5
            env:
              TZ: ${CONFIG_TIMEZONE}
            envFrom:
              - secretRef:
                  name: *secret
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
    service:
      app:
        controller: go2rtc
        ports:
          http:
            port: *port
      streams:
        controller: go2rtc
        type: LoadBalancer
        annotations:
          lbipam.cilium.io/ips: ${CONFIG_GO2RTC_IP}
        labels:
          io.cilium/ippool: public
        ports:
          webrtc-tcp:
            port: 8555
            protocol: TCP
          webrtc-udp:
            port: 8555
            protocol: UDP
    route:
      app:
        hostnames: ["${HOSTNAME}"]
        parentRefs:
          - name: envoy-internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
          - timeouts:
              request: 0s
              backendRequest: 0s
    persistence:
      config:
        type: configMap
        name: go2rtc-config
        globalMounts:
          - path: /config/go2rtc.yaml
            subPath: go2rtc.yaml
            readOnly: true
