---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app immich-machine-learning
  namespace: selfhosted
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.2.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: immich-server
  values:
    controllers:
      main:
        strategy: RollingUpdate
        annotations:
          configmap.reloader.stakater.com/reload: &configmap immich-configmap
        pod:
          enableServiceLinks: false
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app
        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: v1.86.0
            env:
              IMMICH_MEDIA_LOCATION: &mediaLocation /usr/src/app/upload
              MACHINE_LEARNING_HOST: 0.0.0.0
              MACHINE_LEARNING_PORT: &port 3003
              MACHINE_LEARNING_CACHE_FOLDER: /cache
              TRANSFORMERS_CACHE: /cache
            resources:
              requests:
                cpu: 100m
                memory: 250Mi
              limits:
                memory: 4000Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 5
              readiness: *probes
              startup:
                enabled: false
    service:
      main:
        ports:
          http:
            port: *port
    persistence:
      library:
        existingClaim: immich-media
        globalMounts:
          - path: *mediaLocation
      cache:
        existingClaim: immich-ml-cache
        globalMounts:
          - path: /cache
