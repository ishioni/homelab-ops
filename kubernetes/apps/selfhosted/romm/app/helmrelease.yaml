---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: romm
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  interval: 30m
  maxHistory: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 5000
        fsGroup: 5000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: {type: RuntimeDefault}
    controllers:
      romm:
        annotations:
          secret.reloader.stakater.com/reload: &secret romm-secret
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.6
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: *secret
        containers:
          app:
            image:
              repository: ghcr.io/rommapp/romm
              tag: 4.3.1
            env:
              HASHEOUS_API_ENABLED: true
              PLAYMATCH_API_ENABLED: true
              TZ: ${CONFIG_TIMEZONE}
              ROMM_DB_DRIVER: postgresql
              REDIS_HOST: dragonfly.database.svc.cluster.local
              REDIS_PORT: 6379
              REDIS_DB: 5
              OIDC_ENABLED: true
              OIDC_PROVIDER: authentik
              OIDC_REDIRECT_URI: https://${HOSTNAME}/api/oauth/openid
              OIDC_SERVER_APPLICATION_URL: https://${AUTH_HOSTNAME}/application/o/romm
            envFrom:
              - secretRef:
                  name: *secret
            probes:
              liveness: &probes
                enabled: true
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 10m
                memory: 500Mi
    service:
      app:
        controller: romm
        ports:
          http:
            port: 8080
    route:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: Rom emulator
          gethomepage.dev/group: Selfhosted
          gethomepage.dev/icon: sh-romm.png
          gethomepage.dev/name: Romm
        hostnames: ["${HOSTNAME}"]
        parentRefs:
          - name: envoy-internal
            namespace: network
            sectionName: https
    persistence:
      config:
        type: configMap
        name: romm-config
        globalMounts:
          - path: /romm/config/config.yml
            subPath: config.yml
            readOnly: true
      data:
        existingClaim: ${PVC_CLAIM}
        advancedMounts:
          romm:
            app:
              - path: /romm/config
                subPath: config
              - path: /romm/assets
                subPath: assets
              - path: /romm/resources
                subPath: resources
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
      games:
        existingClaim: selfhosted-pvc
        advancedMounts:
          romm:
            app:
              - path: /romm/library
                subPath: Games
