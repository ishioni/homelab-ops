---
# yaml-language-server: $schema=https://raw.githubusercontent.com/budimanjojo/talhelper/master/pkg/config/schemas/talconfig.json
clusterName: ${clusterName}
# renovate: depName=ghcr.io/siderolabs/installer datasource=docker
talosVersion: v1.9.5
# renovate: depName=ghcr.io/siderolabs/kubelet datasource=docker
kubernetesVersion: v1.32.3
endpoint: "https://${clusterName}-api.${clusterDNSSuffix}:6443"

clusterPodNets:
  - 172.16.0.0/16
clusterSvcNets:
  - 10.100.0.0/16
cniConfig:
  name: none

additionalApiServerCertSans: &san
  - ${clusterName}-api.${clusterDNSSuffix}
  - "127.0.0.1" # KubePrism

additionalMachineCertSans: *san

nodes:
  - hostname: master-0.${clusterDNSSuffix}
    ipAddress: 10.1.2.33
    controlPlane: true
    installDisk: /dev/sda
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "bc:24:11:*"
          driver: virtio_net
        mtu: 1500
        dhcp: true
        vip:
          ip: ${clusterEndpointIP}

  - hostname: master-1.${clusterDNSSuffix}
    ipAddress: 10.1.2.34
    controlPlane: true
    installDisk: /dev/sda
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "bc:24:11:*"
          driver: virtio_net
        mtu: 1500
        dhcp: true
        vip:
          ip: ${clusterEndpointIP}

  - hostname: master-2.${clusterDNSSuffix}
    ipAddress: 10.1.2.35
    controlPlane: true
    installDisk: /dev/sda
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "bc:24:11:*"
          driver: virtio_net
        mtu: 1500
        dhcp: true
        vip:
          ip: ${clusterEndpointIP}

  - hostname: worker-0.${clusterDNSSuffix}
    ipAddress: 10.1.2.36
    controlPlane: false
    installDiskSelector:
      size: "<= 80GB"
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "bc:24:11:*"
          driver: virtio_net
        mtu: 1500
        dhcp: true

  - hostname: worker-1.${clusterDNSSuffix}
    disableSearchDomain: true
    ipAddress: 10.1.2.37
    controlPlane: false
    installDiskSelector:
      size: "<= 80GB"
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "bc:24:11:*"
          driver: virtio_net
        mtu: 1500
        dhcp: true

  - hostname: worker-2.${clusterDNSSuffix}
    disableSearchDomain: true
    ipAddress: 10.1.2.38
    controlPlane: false
    installDiskSelector:
      size: "<= 80GB"
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "bc:24:11:*"
          driver: virtio_net
        mtu: 1500
        dhcp: true

  - hostname: experiment-0.${clusterDNSSuffix}
    disableSearchDomain: true
    ipAddress: 10.1.2.39
    controlPlane: true
    installDiskSelector:
      model: KINGSTON SA2000M8250G # KINGSTON SKC3000S512G on others
    networkInterfaces:
      - deviceSelector:
          driver: e1000e
        ignore: true
      - deviceSelector:
          driver: r8169
          hardwareAddr: 1c:fd:08:75:14:3b
        dhcp: false
        vlans:
          - {vlanId: 2, mtu: 1500, dhcp: true}

patches:
  # Force nameserver
  - &nameserverPatch |-
    machine:
      network:
        nameservers:
          - 10.1.2.1
  # Enable unprivileged ports
  - &containerdPatch |-
    machine:
      files:
        - op: create
          path: /etc/cri/conf.d/20-customization.part
          content: |
            [plugins."io.containerd.cri.v1.images"]
              discard_unpacked_layers = false
  # Kubelet flags
  - &kubeletFlagsPatch |-
    machine:
      kubelet:
        extraConfig:
          serializeImagePulls: false
        extraArgs:
          rotate-server-certificates: "true"
        nodeIP:
          validSubnets:
            - 10.1.2.0/24
  # Sysctl
  - &sysctlPatch |-
    machine:
      sysctls:
        fs.inotify.max_queued_events: "65536"
        fs.inotify.max_user_instances: 8192
        fs.inotify.max_user_watches: 1048576
        net.core.rmem_max: "7500000"
        net.core.wmem_max: "7500000"
  # Enable KubePrism
  - &kubePrismPatch |-
    machine:
      features:
        kubePrism:
          enabled: true
          port: 7445
  - &hostDNS |-
    machine:
      features:
        hostDNS:
          enabled: true
          resolveMemberNames: true
          forwardKubeDNSToHost: false # Incompatible with Cilium bpf masquerade
  # Disable search domain everywhere
  - &disableSearchDomainPatch |-
    machine:
      network:
        disableSearchDomain: true
  - |-
    machine:
      sysctls:
        fs.inotify.max_user_watches: 1048576   # Watchdog
        fs.inotify.max_user_instances: 8192    # Watchdog
        net.core.default_qdisc: fq             # 10Gb/s
        net.core.rmem_max: 67108864            # 10Gb/s | Cloudflared / QUIC
        net.core.wmem_max: 67108864            # 10Gb/s | Cloudflared / QUIC
        net.ipv4.tcp_congestion_control: bbr   # 10Gb/s
        net.ipv4.tcp_fastopen: 3               # TCP Fast Open
        net.ipv4.tcp_mtu_probing: 1            # 10Gb/s | Jumbo frames
        net.ipv4.tcp_rmem: 4096 87380 33554432 # 10Gb/s
        net.ipv4.tcp_wmem: 4096 65536 33554432 # 10Gb/s
        net.ipv4.tcp_window_scaling: 1         # 10Gb/s

controlPlane:
  schematic:
    customization:
      extraKernelArgs:
        - init_on_alloc=0
        - init_on_free=0
        - mitigations=off
      systemExtensions:
        officialExtensions:
          - siderolabs/qemu-guest-agent
  patches:
    # Enable metrics scraping
    - |-
      cluster:
        controllerManager:
          extraArgs:
            bind-address: 0.0.0.0
        etcd:
          extraArgs:
            listen-metrics-urls: http://0.0.0.0:2381
        scheduler:
          extraArgs:
            bind-address: 0.0.0.0
    # Disable kube-proxy
    - |
      cluster:
        proxy:
          disabled: true
    # Disable imagelocality
    - |
      cluster:
        scheduler:
          config:
            apiVersion: kubescheduler.config.k8s.io/v1
            kind: KubeSchedulerConfiguration
            profiles:
              - schedulerName: default-scheduler
                plugins:
                  score:
                    disabled:
                      - name: ImageLocality
    # etcd configuration
    - |-
      cluster:
        etcd:
          advertisedSubnets:
            - 10.1.2.0/24
    # Enable K8s Talos API Access
    - |-
      machine:
        features:
          kubernetesTalosAPIAccess:
            enabled: true
            allowedRoles:
              - os:etcd:backup
              - os:admin
            allowedKubernetesNamespaces:
              - kube-system
              - github
    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl


worker:
  schematic:
    customization:
      extraKernelArgs:
        - init_on_alloc=0
        - init_on_free=0
        - mitigations=off
        - i915.disable_display=true
      systemExtensions:
        officialExtensions:
          - siderolabs/qemu-guest-agent
          - siderolabs/i915
          - siderolabs/iscsi-tools
  patches:
    # Extra SSD to mount
    - |-
      machine:
        kubelet:
          extraMounts:
            - destination: /var/openebs/local
              type: bind
              source: /var/openebs/local
              options:
                - rbind
                - rshared
                - rw
    - |-
      machine:
        sysctls:
          kernel.kexec_load_disabled: 1 # Disable kexec on gvtd nodes
