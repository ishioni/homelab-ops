---
# yaml-language-server: $schema=https://raw.githubusercontent.com/ishioni/CRDs-catalog/main/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: lidarr
spec:
  chart:
    spec:
      chart: app-template
      version: 2.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 30m
  values:
    controllers:
      main:
        type: statefulset
        annotations:
          secret.reloader.stakater.com/reload: &secret lidarr-secret
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.1
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: *secret
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: ${APP_UID}
            runAsGroup: ${APP_GID}
            fsGroup: ${APP_GID}
            fsGroupChangePolicy: OnRootMismatch
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/lidarr-develop
              tag: 2.1.3.3927
            env:
              TZ: "${CONFIG_TIMEZONE}"
              LIDARR__INSTANCE_NAME: Lidarr
              LIDARR__PORT: &port 80
              LIDARR__AUTHENTICATION_METHOD: External
              LIDARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              LIDARR__ANALYTICS_ENABLED: "False"
              COMPlus_EnableDiagnostics: "0"
            envFrom:
              - secretRef:
                  name: *secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 50m
                memory: 200Mi
              limits:
                memory: 2000Mi
    service:
      main:
        ports:
          http:
            port: *port
    persistence:
      config:
        enabled: true
        existingClaim: ${VOLSYNC_CLAIM}
      media:
        enabled: true
        existingClaim: downloads-datastore
        retain: true
        globalMounts:
          - path: /media
    ingress:
      main:
        enabled: true
        className: public
        annotations:
          authentik.home.arpa/enabled: "true"
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://${HOSTNAME}/outpost.goauthentik.io/start?rd=$escaped_request_uri
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Downloads
          gethomepage.dev/name: Lidarr
          gethomepage.dev/icon: lidarr.svg
          gethomepage.dev/widget.type: lidarr
          gethomepage.dev/widget.url: http://lidarr.downloads
          gethomepage.dev/widget.key: "{{HOMEPAGE_VAR_LIDARR_TOKEN}}"
        hosts:
          - host: &host ${HOSTNAME}
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls: [hosts: [*host]]
