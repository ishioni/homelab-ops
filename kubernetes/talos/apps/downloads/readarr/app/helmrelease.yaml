---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: readarr
spec:
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 30m
  values:
    controllers:
      readarr:
        type: statefulset
        annotations:
          secret.reloader.stakater.com/reload: &secret readarr-secret
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.3
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: *secret
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 2000
            fsGroup: 2000
            fsGroupChangePolicy: OnRootMismatch
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/readarr-develop
              tag: 0.3.26.2526
            env:
              TZ: ${CONFIG_TIMEZONE}
              READARR__INSTANCE_NAME: ${APP}
              READARR__PORT: &port 80
              READARR__AUTHENTICATION_METHOD: None
              READARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              RADARR__ANALYTICS_ENABLED: "False"
              COMPlus_EnableDiagnostics: "0"
            envFrom:
              - secretRef:
                  name: *secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 50m
                memory: 200Mi
              limits:
                memory: 2000Mi
    service:
      app:
        controller: readarr
        ports:
          http:
            port: *port
    ingress:
      app:
        className: public
        annotations:
          authentik.home.arpa/enabled: "true"
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://${HOSTNAME}/outpost.goauthentik.io/start?rd=$escaped_request_uri
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Downloads
          gethomepage.dev/name: Readarr
          gethomepage.dev/icon: readarr.svg
          gethomepage.dev/widget.type: readarr
          gethomepage.dev/widget.url: http://readarr.downloads
          gethomepage.dev/widget.key: "{{`{{HOMEPAGE_VAR_READARR_TOKEN}}`}}"
        hosts:
          - host: &host ${HOSTNAME}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls: [hosts: [*host]]
    persistence:
      config:
        existingClaim: ${PVC_CLAIM}
        globalMounts:
          - path: /config
      media:
        existingClaim: downloads-datastore
        globalMounts:
          - path: /media
