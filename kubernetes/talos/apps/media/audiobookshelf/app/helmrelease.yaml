---
# yaml-language-server: $schema=https://raw.githubusercontent.com/ishioni/CRDs-catalog/main/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: audiobookshelf
spec:
  chart:
    spec:
      chart: app-template
      version: 3.0.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 30m
  values:
    controllers:
      main:
        annotations:
          secret.reloader.stakater.com/reload: &secret audiobookshelf-secret
        pod:
          securityContext:
            runAsUser: ${APP_UID}
            runAsGroup: ${APP_GID}
            fsGroup: ${APP_GID}
            fsGroupChangePolicy: OnRootMismatch
        containers:
          main:
            image:
              repository: ghcr.io/advplyr/audiobookshelf
              tag: 2.8.0
            envFrom:
              - secretRef:
                  name: *secret
            env:
              TZ: ${CONFIG_TIMEZONE}
              PORT: &port 8080
              AUDIOBOOKSHELF_UID: ${APP_UID}
              AUDIOBOOKSHELF_GID: ${APP_GID}
              CONFIG_PATH: /config
              METADATA_PATH: /config/metadata
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthcheck
                    port: *port
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 50m
                memory: 200Mi
              limits:
                memory: 600Mi
    persistence:
      config:
        enabled: true
        existingClaim: ${VOLSYNC_CLAIM}
      media:
        enabled: true
        existingClaim: media-datastore
        globalMounts:
          - path: /audiobooks
            subPath: Audiobooks
          - path: /podcasts
            subPath: Podcasts
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        className: public
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/appName: Audiobookshelf
          hajimari.io/icon: mdi:book-music
          hajimari.io/group: selfhosted
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/name: Audiobookshelf
          gethomepage.dev/icon: audiobookshelf.svg
          gethomepage.dev/widget.type: audiobookshelf
          gethomepage.dev/widget.url: http://audiobookshelf.media:8080
          gethomepage.dev/widget.key: "{{HOMEPAGE_VAR_AUDIOBOOKSHELF_TOKEN}}"
        hosts:
          - host: &host ${HOSTNAME}
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls: [hosts: [*host]]
