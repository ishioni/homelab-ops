---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: gatus
spec:
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 30m
  values:
    controllers:
      gatus:
        annotations:
          secret.reloader.stakater.com/reload: &secret gatus-secret
          configmap.reloader.stakater.com/reload: &configmap gatus-configmap
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.3
            envFrom: &envfrom
              - secretRef:
                  name: *secret
          init-config:
            dependsOn: init-db
            image:
              repository: ghcr.io/kiwigrid/k8s-sidecar
              tag: 1.27.2
            env:
              FOLDER: /config
              LABEL: gatus.io/enabled
              NAMESPACE: ALL
              RESOURCE: both
              UNIQUE_FILENAMES: true
              METHOD: WATCH
            restartPolicy: Always
        containers:
          app:
            image:
              repository: ghcr.io/twin/gatus
              tag: v5.11.0
            env:
              TZ: ${CONFIG_TIMEZONE}
              PUBLIC_DOMAIN: ${PUBLIC_DOMAIN}
              PRIVATE_DOMAIN: ${PRIVATE_DOMAIN}
              NAS_DOMAIN: ${NAS_DOMAIN}
              GATUS_CONFIG_PATH: /config
              GATUS_DELAY_START_SECONDS: 5
              CUSTOM_WEB_PORT: &port 8080
            envFrom: *envfrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
              limits:
                memory: 250Mi
    defaultPodOptions:
      dnsConfig:
        options:
          - {name: ndots, value: "1"}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: {type: RuntimeDefault}
    service:
      app:
        controller: gatus
        ports:
          http:
            port: *port
    serviceMonitor:
      app:
        serviceName: gatus
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      app:
        className: public
        hosts:
          - host: &host ${HOSTNAME}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls: [hosts: [*host]]
    serviceAccount:
      create: true
      name: gatus
    persistence:
      config:
        type: emptyDir
      config-file:
        type: configMap
        name: *configmap
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
            readOnly: true
