---
# yaml-language-server: $schema=https://raw.githubusercontent.com/budimanjojo/talhelper/master/pkg/config/schemas/talconfig.json
clusterName: ${clusterName}
# renovate: depName=ghcr.io/siderolabs/installer datasource=docker
talosVersion: v1.8.2
# renovate: depName=ghcr.io/siderolabs/kubelet datasource=docker
kubernetesVersion: v1.31.2
endpoint: "https://${clusterName}-api.${clusterDNSSuffix}:6443"

clusterPodNets:
  - 172.16.0.0/16
clusterSvcNets:
  - 10.100.0.0/16
cniConfig:
  name: none

additionalApiServerCertSans: &san
  - ${clusterName}-api.${clusterDNSSuffix}
  - "127.0.0.1" # KubePrism

additionalMachineCertSans: *san

nodes:
  - hostname: master-0.${clusterDNSSuffix}
    ipAddress: 10.1.2.33
    controlPlane: true
    installDisk: /dev/sda
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "bc:24:11:*"
          driver: virtio_net
        mtu: 1500
        dhcp: true
        vip:
          ip: ${clusterEndpointIP}

  - hostname: master-1.${clusterDNSSuffix}
    ipAddress: 10.1.2.34
    controlPlane: true
    installDisk: /dev/sda
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "bc:24:11:*"
          driver: virtio_net
        mtu: 1500
        dhcp: true
        vip:
          ip: ${clusterEndpointIP}

  - hostname: master-2.${clusterDNSSuffix}
    ipAddress: 10.1.2.35
    controlPlane: true
    installDisk: /dev/sda
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "bc:24:11:*"
          driver: virtio_net
        mtu: 1500
        dhcp: true
        vip:
          ip: ${clusterEndpointIP}

  - hostname: worker-0.${clusterDNSSuffix}
    ipAddress: 10.1.2.36
    controlPlane: false
    installDisk: /dev/sda
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "bc:24:11:*"
          driver: virtio_net
        mtu: 1500
        dhcp: true
    # nodeLabels: &workerLabels
    #   node-role.kubernetes.io/worker: worker

  - hostname: worker-1.${clusterDNSSuffix}
    disableSearchDomain: true
    ipAddress: 10.1.2.37
    controlPlane: false
    installDisk: /dev/sda
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "bc:24:11:*"
          driver: virtio_net
        mtu: 1500
        dhcp: true
    # nodeLabels: *workerLabels

  - hostname: worker-2.${clusterDNSSuffix}
    disableSearchDomain: true
    ipAddress: 10.1.2.38
    controlPlane: false
    installDisk: /dev/sda
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "bc:24:11:*"
          driver: virtio_net
        mtu: 1500
        dhcp: true
    # nodeLabels: *workerLabels

patches:
  # Force nameserver
  - &nameserverPatch |-
    machine:
      network:
        nameservers:
          - 10.1.2.1
  # Enable unprivileged ports
  - &containerdPatch |-
    machine:
      files:
        - op: create
          path: /etc/cri/conf.d/20-customization.part
          content: |
            [plugins]
              [plugins."io.containerd.grpc.v1.cri"]
                enable_unprivileged_ports = true
                enable_unprivileged_icmp = true
              [plugins."io.containerd.grpc.v1.cri".containerd]
                discard_unpacked_layers = false
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                discard_unpacked_layers = false
  # Kubelet flags
  - &kubeletFlagsPatch |-
    machine:
      kubelet:
        extraArgs:
          rotate-server-certificates: "true"
        nodeIP:
          validSubnets:
            - 10.1.2.0/24
  # Sysctl
  - &sysctlPatch |-
    machine:
      sysctls:
        fs.inotify.max_user_watches: 1048576
        fs.inotify.max_user_instances: 8192
  # Enable KubePrism
  - &kubePrismPatch |-
    machine:
      features:
        kubePrism:
          enabled: true
          port: 7445
  - &hostDNS |-
    machine:
      features:
        hostDNS:
          enabled: true
          resolveMemberNames: true
          forwardKubeDNSToHost: false # Incompatible with Cilium bpf masquerade
  # Disable search domain everywhere
  - &disableSearchDomainPatch |-
    machine:
      network:
        disableSearchDomain: true
  # Configure cluster loopback
  # - &staticHostEntriesPatch |-
  #   machine:
  #     network:
  #       extraHostEntries:
  #         - ip: ${clusterEndpointIP}
  #           aliases:
  #             - ${clusterName}.${clusterDNSSuffix}

controlPlane:
  schematic:
    customization:
      extraKernelArgs:
        - mitigations=off
      systemExtensions:
        officialExtensions:
          - siderolabs/qemu-guest-agent
  patches:
    # Enable metrics scraping
    - |-
      cluster:
        controllerManager:
          extraArgs:
            bind-address: 0.0.0.0
        etcd:
          extraArgs:
            listen-metrics-urls: http://0.0.0.0:2381
        scheduler:
          extraArgs:
            bind-address: 0.0.0.0
    # Enable cluster discovery
    - |-
      cluster:
        discovery:
          registries:
            kubernetes:
              disabled: false
            service:
              disabled: true
    # Disable kube-proxy
    - |
      cluster:
        proxy:
          disabled: true
    # etcd configuration
    - |-
      cluster:
        etcd:
          advertisedSubnets:
            - 10.1.2.0/24
    # Enable K8s Talos API Access
    - |-
      machine:
        features:
          kubernetesTalosAPIAccess:
            enabled: true
            allowedRoles:
              - os:etcd:backup
            allowedKubernetesNamespaces:
              - kube-system
    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl

worker:
  schematic:
    customization:
      extraKernelArgs:
        - mitigations=off
        - i915.disable_display=true
      systemExtensions:
        officialExtensions:
          - siderolabs/qemu-guest-agent
          - siderolabs/i915-ucode
          - siderolabs/iscsi-tools
